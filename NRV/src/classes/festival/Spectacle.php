<?php

namespace nrv\festival;

use nrv\exception\InvalidPropertyNameException;

/**
 * Spectacle class
 *
 * Represents a spectacle
 */
class Spectacle {

    /** @var int unique identifier */
    private int $id; // Autogenerated
    /** @var string title */
    private string $titre;
    /** @var string description */
    private string $description;
    /** @var string video path */
    private string $chemin_video;
    /** @var string schedule */
    private string $horaire;
    /** @var string duration */
    private string $duree;
    /** @var string style */
    private string $style;

    /**
     * Constructor
     * @param string $titre title
     * @param string $description description
     * @param string $horaire schedule
     * @param string $duree duration
     * @param string $style style
     * @param string $chemin_video video path
     */
    public function __construct(string $titre, string $description, string $horaire, string $duree,string $style, string $chemin_video = "pas d'image") {
        $this->titre = $titre;
        $this->description = $description;
        $this->chemin_video = $chemin_video;
        $this->horaire = $horaire;
        $this->duree = $duree;
        $this->style = $style;
    }

    /**
     * Set the unique identifier
     * @param int $id unique identifier
     * @return void
     */
    public function setId(int $id): void {
        $this->id = $id;
    }

    /**
     * Set the video path
     * @param string $chemin_video video path
     * @return void
     */
    public function setCheminVideo(string $chemin_video): void {
        $this->chemin_video = $chemin_video;
    }

    /**
     * Magic method to get the value of an attribute
     * @param string $attrName name of the attribute
     * @return mixed value of the attribute
     * @throws InvalidPropertyNameException
     */
    public function __get(string $attrName) : mixed {
        if (property_exists($this, $attrName)) {
            return $this->$attrName;
        } else {
            throw new InvalidPropertyNameException("Propriété $attrName inexistante");
        }
    }
}